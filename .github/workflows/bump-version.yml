name: Bump Version

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get current version
        id: current_version
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          echo "CURRENT_VERSION=$CURRENT" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT"

      - name: Bump version
        id: bump_version
        run: |
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          NEW_VERSION=${NEW_VERSION#v}  # Remove 'v' prefix that npm adds
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Build package
        run: |
          make clean
          make build

      - name: Commit version bump
        run: |
          git add package.json
          git commit -m "Bump version to ${{ steps.bump_version.outputs.NEW_VERSION }}"

      - name: Create and push tag
        run: |
          git tag v${{ steps.bump_version.outputs.NEW_VERSION }}
          git push origin main
          git push origin v${{ steps.bump_version.outputs.NEW_VERSION }}

      - name: Summary
        run: |
          echo "‚úÖ Version bumped from ${{ steps.current_version.outputs.CURRENT_VERSION }} to ${{ steps.bump_version.outputs.NEW_VERSION }}"
          echo "üè∑Ô∏è Created tag: v${{ steps.bump_version.outputs.NEW_VERSION }}"
          echo "üöÄ Release workflow will trigger automatically"