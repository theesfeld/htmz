name: Release Both Packages

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update main package version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "${{ steps.get_version.outputs.VERSION }}" ]; then
            npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version
            echo "Updated main package from $CURRENT_VERSION to ${{ steps.get_version.outputs.VERSION }}"
          else
            echo "Main package already at version ${{ steps.get_version.outputs.VERSION }}"
          fi

      - name: Update create-htmz-app package version
        run: |
          cd create-htmz-app
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "${{ steps.get_version.outputs.VERSION }}" ]; then
            npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version
            echo "Updated create-htmz-app from $CURRENT_VERSION to ${{ steps.get_version.outputs.VERSION }}"
          else
            echo "Create-htmz-app already at version ${{ steps.get_version.outputs.VERSION }}"
          fi

      - name: Build main package
        run: |
          make clean
          make build
          echo "Main package build completed"

      - name: Verify build artifacts
        run: |
          ls -la dist/
          test -f dist/htmz.js || exit 1
          test -f dist/htmz.min.js || exit 1
          echo "Build artifacts verified"

      - name: Publish main package to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish create-htmz-app to npm
        run: |
          cd create-htmz-app
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## htmz v${{ steps.get_version.outputs.VERSION }}

            ### üöÄ Installation
            **Main Library:**
            ```bash
            npm install @htmz/htmz@${{ steps.get_version.outputs.VERSION }}
            ```

            **Create New Project:**
            ```bash
            npm create @htmz/htmz-app@${{ steps.get_version.outputs.VERSION }} my-app
            ```

            ### üì¶ CDN
            ```html
            <script src="https://unpkg.com/@htmz/htmz@${{ steps.get_version.outputs.VERSION }}/dist/htmz.min.js"></script>
            ```

            ### üîê Security Features
            - Localhost-only proxy binding (127.0.0.1)
            - HMAC-SHA256 request signing
            - TOML-based endpoint whitelisting
            - Per-endpoint authentication

            ### üì¶ Packages Released
            - `@htmz/htmz@${{ steps.get_version.outputs.VERSION }}` - Main library
            - `@htmz/create-htmz-app@${{ steps.get_version.outputs.VERSION }}` - Project scaffolding

            ### üìã Changes
            See commit history for detailed changes in this release.
          files: |
            dist/htmz.js
            dist/htmz.min.js
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}